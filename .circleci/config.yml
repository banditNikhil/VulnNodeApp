version: 2.1
orbs:
  owasp: entur/owasp@0.0.10
jobs:
  # build app in docker
  build:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run: echo "$DOCKER_PASS" | docker login  hub.klickstartonline.com --username $DOCKER_USER --password-stdin
      - run: docker build -t hub.klickstartonline.com/app .
  # deploy docker to server
  deploy:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run: echo "$DOCKER_PASS" | docker login  hub.klickstartonline.com --username $DOCKER_USER --password-stdin
      - run: docker build -t hub.klickstartonline.com/app .
      - run: docker push hub.klickstartonline.com/app
      - run: ssh-keyscan app.klickstartonline.com >> ~/.ssh/known_hosts
      - run:
          name: ZAP baseline test of application
          # test 
          # Only fail on error code 1, which indicates at least one FAIL was found.
          # error codes 2 & 3 indicate WARN or other, and should not break the run
          command: |
            (
            docker pull owasp/zap2docker-weekly \
            # docker run -v /home/circleci/project:/zap/wrk/ -t owasp/zap2docker-weekly ls /zap/wrk/ && \
            docker run -v /home/circleci/project:/zap/wrk/:rw -t owasp/zap2docker-weekly zap-baseline.py \
                -u https://raw.githubusercontent.com/banditNikhil/VulnNodeApp/master/zap-baseline.conf \
                -r zap_report.html \
                -t http://app.klickstartonline.com/ || \
            if [ $? -ne 1 ]; then exit 0; else exit 1; fi;
            )
      # store zap report
      - store_artifacts:
          path: ./zap_report.html
      # deploy          
      - run:
          name: Deploy Over SSH
          command: |
            ssh ubuntu@app.klickstartonline.com  "/home/ubuntu/VulnNodeApp/update.sh"

workflows:
  version: 2
  # build
  build-master:
    jobs:
      - build:
          filters:
            branches:
              only: master
  # dep check and deploy
  owasp:
    jobs:
      - owasp/commandline_owasp_dependency_check:
          arguments: >-
            --scan ./ --failOnCVSS 7
      - deploy:
          requires: 
            - owasp/commandline_owasp_dependency_check

